{"ast":null,"code":"var _jsxFileName = \"/Users/kepbrdsmecom/techtonic/spnd-react-redux/spnd/front_end/src/components/RecordPurchase.js\";\nimport React, { PureComponent } from 'react'; // import { connect } from 'react-redux';\n\nimport axios from 'axios';\nimport { AnalyzeSpending, makeSpentCards } from './analyzeSpending';\n\nclass RecordPurchase extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.collectNewRecord = event => {\n      event.preventDefault();\n      const _this$state = this.state,\n            purchaseDate = _this$state.purchaseDate,\n            category = _this$state.category,\n            item = _this$state.item,\n            amount = _this$state.amount,\n            retailer = _this$state.retailer,\n            notes = _this$state.notes,\n            paymentMethod = _this$state.paymentMethod;\n      let spendObj = {\n        purchaseDate,\n        category,\n        item,\n        amount,\n        retailer,\n        notes,\n        paymentMethod\n      };\n      console.log(spendObj);\n\n      if (spendObj.purchaseDate && spendObj.category.length > 0 && spendObj.item.length > 0 && Number(spendObj.amount) > 0 && spendObj.retailer.length > 0 && spendObj.notes.length > 0 && spendObj.paymentMethod.length > 0) {\n        this.postEventObj(spendObj);\n      } else {\n        alert('Please fill in all the fields before submitting.');\n      } // document.getElementById('recordSpend').reset();\n      //send this to the database.\n\n\n      this.setState({\n        purchases: [...this.state.purchases, spendObj],\n        purchaseDate: '',\n        category: '',\n        item: '',\n        amount: 0,\n        store: '',\n        retailer: '',\n        notes: '',\n        paymentMethod: ''\n      }); //call axios here to send the data to the db\n    };\n\n    this.postEventObj = async obj => {\n      const resolved = await axios.post(\"http://localhost:3005/spend/\", obj).catch(err => {\n        return \"There was a problem making your mongoDB post request. \".concat(err);\n      });\n      console.log(resolved.data);\n      this.retrieveSpendingRecords();\n    };\n\n    this.retrieveSpendingRecords = async () => {\n      console.log('retrieveSpendingRecords was called.');\n      const records = await axios.get(\"http://localhost:3005/spend/retrieve\").then(res => {\n        console.log(res.data);\n        return res.data;\n      }).catch(err => {\n        return \"There was a problem retrieving data from the database. \".concat(err);\n      }); //send data to analyzeSpending\n      // makeSpentCards(records)\n    };\n\n    this.updateVal = e => {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      purchases: [],\n      purchaseDate: '',\n      category: '',\n      item: '',\n      amount: '',\n      retailer: '',\n      notes: '',\n      paymentMethod: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      id: \"recordSpend\",\n      className: \"recordForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Record your spent money:\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Purchase Date\", React.createElement(\"input\", {\n      onChange: this.updateVal,\n      value: this.state.purchaseDate,\n      type: \"date\",\n      name: \"purchaseDate\",\n      id: \"purchaseDate\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Category\", React.createElement(\"input\", {\n      onChange: this.updateVal,\n      value: this.state.category,\n      type: \"text\",\n      name: \"category\",\n      id: \"category\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Item Purchased\", React.createElement(\"input\", {\n      onChange: this.updateVal,\n      value: this.state.item,\n      type: \"text\",\n      name: \"item\",\n      id: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Amount Spent\", React.createElement(\"input\", {\n      onChange: this.updateVal,\n      value: this.state.amount,\n      type: \"number\",\n      name: \"amount\",\n      id: \"amount\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Retailer\", React.createElement(\"input\", {\n      onChange: this.updateVal,\n      value: this.state.retailer,\n      type: \"text\",\n      name: \"retailer\",\n      id: \"retailer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Notes\", React.createElement(\"input\", {\n      onChange: this.updateVal,\n      value: this.state.notes,\n      type: \"text\",\n      name: \"notes\",\n      id: \"notes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Payment Method\", React.createElement(\"input\", {\n      onChange: this.updateVal,\n      value: this.state.paymentMethod,\n      type: \"text\",\n      name: \"paymentMethod\",\n      id: \"paymentMethod\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn\",\n      onClick: this.collectNewRecord,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Save record\"));\n  }\n\n}\n\nexport default RecordPurchase;","map":{"version":3,"sources":["/Users/kepbrdsmecom/techtonic/spnd-react-redux/spnd/front_end/src/components/RecordPurchase.js"],"names":["React","PureComponent","axios","AnalyzeSpending","makeSpentCards","RecordPurchase","constructor","props","collectNewRecord","event","preventDefault","state","purchaseDate","category","item","amount","retailer","notes","paymentMethod","spendObj","console","log","length","Number","postEventObj","alert","setState","purchases","store","obj","resolved","post","catch","err","data","retrieveSpendingRecords","records","get","then","res","updateVal","e","target","name","value","render"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\n// import { connect } from 'react-redux';\nimport axios from 'axios';\nimport { AnalyzeSpending, makeSpentCards } from './analyzeSpending';\n\nclass RecordPurchase extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { \n      purchases: [],\n      purchaseDate: '',\n      category: '',\n      item: '',\n      amount: '',\n      retailer: '',\n      notes: '',\n      paymentMethod: ''\n   };\n  }\n\n  collectNewRecord = (event)=> {\n    event.preventDefault();\n    const {\n      purchaseDate,\n      category,\n      item,\n      amount,\n      retailer,\n      notes,\n      paymentMethod\n    } = this.state\n\n    let spendObj = {\n      purchaseDate,\n      category,\n      item,\n      amount,\n      retailer,\n      notes,\n      paymentMethod\n    };\n    console.log(spendObj);\n\n    if(spendObj.purchaseDate &&\n      spendObj.category.length > 0 &&\n      spendObj.item.length > 0 &&\n      Number(spendObj.amount) > 0 &&\n      spendObj.retailer.length > 0 &&\n      spendObj.notes.length > 0 &&\n      spendObj.paymentMethod.length > 0) {\n        this.postEventObj(spendObj);\n\n      } else {\n        alert('Please fill in all the fields before submitting.')\n      }\n    // document.getElementById('recordSpend').reset();\n     //send this to the database.\n     this.setState({ \n      purchases: [...this.state.purchases, spendObj],\n      purchaseDate: '',\n      category: '',\n      item: '',\n      amount: 0,\n      store: '',\n      retailer: '',\n      notes: '',\n      paymentMethod: ''\n    });\n//call axios here to send the data to the db\n  }\n\n  postEventObj = async obj => {\n    const resolved = await axios\n      .post(\"http://localhost:3005/spend/\", obj)\n      .catch(err => {\n        return `There was a problem making your mongoDB post request. ${err}`;\n      });\n      console.log(resolved.data);\n    this.retrieveSpendingRecords();\n  };\n\n  retrieveSpendingRecords = async () => {\n    console.log('retrieveSpendingRecords was called.');\n    \n    const records = await axios.get(\"http://localhost:3005/spend/retrieve\")\n    .then( (res) => {\n      console.log(res.data);\n      return res.data\n    })\n    .catch(err => {\n      return `There was a problem retrieving data from the database. ${err}`;\n    })\n\n    //send data to analyzeSpending\n    // makeSpentCards(records)\n    \n  }\n\n  updateVal = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  render() {\n    return (\n      <form id=\"recordSpend\" className=\"recordForm\">\n        <h1>Record your spent money:</h1>\n        <label>\n          Purchase Date\n          <input onChange={this.updateVal} value={this.state.purchaseDate} type=\"date\" name=\"purchaseDate\" id=\"purchaseDate\" required/>\n        </label>\n        <label>\n          Category\n          <input onChange={this.updateVal} value={this.state.category} type=\"text\" name=\"category\" id=\"category\" required/>\n        </label>\n        <label>\n          Item Purchased\n          <input onChange={this.updateVal} value={this.state.item} type=\"text\" name=\"item\" id=\"item\"/>\n        </label>\n        <label>\n          Amount Spent\n          <input onChange={this.updateVal} value={this.state.amount} type=\"number\" name=\"amount\" id=\"amount\" required/>\n        </label>\n        <label>\n          Retailer\n          <input onChange={this.updateVal} value={this.state.retailer} type=\"text\" name=\"retailer\" id=\"retailer\" />\n        </label>\n        <label>\n          Notes\n          <input onChange={this.updateVal} value={this.state.notes}  type=\"text\" name=\"notes\" id=\"notes\" />\n        </label>\n        <label>\n          Payment Method\n          <input onChange={this.updateVal} value={this.state.paymentMethod}  type=\"text\" name=\"paymentMethod\" id=\"paymentMethod\" required/>\n        </label>\n        <button type=\"button\" className=\"btn\" onClick={this.collectNewRecord}>\n          Save record\n        </button>\n      </form>\n    );\n  }\n}\n\n\nexport default RecordPurchase;"]},"metadata":{},"sourceType":"module"}